$date
	Fri Dec  9 17:36:37 2016
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module testbench $end
$var wire 1 ! CommandCRCCheckEnable_in $end
$var wire 1 " CommandCRCCheckEnable_out $end
$var wire 5 # CommandIndex_in [4:0] $end
$var wire 5 $ CommandIndex_out [4:0] $end
$var wire 1 % CommandIndezCheckEnable_in $end
$var wire 1 & CommandIndezCheckEnable_out $end
$var wire 2 ' CommandType_in [1:0] $end
$var wire 2 ( CommandType_out [1:0] $end
$var wire 1 ) DataPresentState_in $end
$var wire 1 * DataPresentState_out $end
$var wire 2 + ResponseTypeSelect_in [1:0] $end
$var wire 2 , ResponseTypeSelect_out [1:0] $end
$var wire 1 - ack $end
$var wire 1 . clock $end
$var wire 1 / enb_block0 $end
$var wire 1 0 enb_block1 $end
$var wire 1 1 enb_block2 $end
$var wire 1 2 reset $end
$scope module probadorreg $end
$var reg 1 3 CommandCRCCheckEnable_in $end
$var reg 5 4 CommandIndex_in [4:0] $end
$var reg 1 5 CommandIndezCheckEnable_in $end
$var reg 2 6 CommandType_in [1:0] $end
$var reg 1 7 DataPresentState_in $end
$var reg 2 8 ResponseTypeSelect_in [1:0] $end
$var reg 1 9 clock $end
$var reg 1 : enb_block0 $end
$var reg 1 ; enb_block1 $end
$var reg 1 < enb_block2 $end
$var reg 1 = reset $end
$upscope $end
$scope module reg0 $end
$var wire 1 ! CommandCRCCheckEnable_in $end
$var wire 1 " CommandCRCCheckEnable_out $end
$var wire 5 > CommandIndex_in [4:0] $end
$var wire 5 ? CommandIndex_out [4:0] $end
$var wire 1 % CommandIndezCheckEnable_in $end
$var wire 1 & CommandIndezCheckEnable_out $end
$var wire 2 @ CommandType_in [1:0] $end
$var wire 2 A CommandType_out [1:0] $end
$var wire 1 ) DataPresentState_in $end
$var wire 1 * DataPresentState_out $end
$var wire 2 B ResponseTypeSelect_in [1:0] $end
$var wire 2 C ResponseTypeSelect_out [1:0] $end
$var wire 1 . clk $end
$var wire 16 D data_in [15:0] $end
$var wire 1 / enb_block0 $end
$var wire 1 0 enb_block1 $end
$var wire 1 1 enb_block2 $end
$var wire 1 2 rst $end
$var reg 1 E ack $end
$var reg 16 F data_out [15:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx F
0E
b1011010101001 D
bx C
b1 B
bx A
b10 @
bx ?
b10110 >
1=
0<
0;
0:
09
b1 8
17
b10 6
05
b10110 4
13
12
01
00
0/
0.
0-
bx ,
b1 +
x*
1)
bx (
b10 '
x&
0%
bx $
b10110 #
x"
1!
$end
#1000
b0 $
b0 ?
b0 (
b0 A
0*
0&
0"
b0 ,
b0 C
b0 F
19
1.
#2000
09
0.
#3000
19
1.
#4000
09
0.
#5000
19
1.
#6000
09
0.
#7000
19
1.
#8000
09
0.
#9000
19
1.
#10000
09
0.
#11000
19
1.
#12000
09
0.
#13000
19
1.
#14000
09
0.
#15000
19
1.
0=
02
#16000
09
0.
#17000
19
1.
#18000
09
0.
#19000
19
1.
#20000
09
0.
#21000
19
1.
#22000
09
0.
#23000
19
1.
#24000
09
0.
#25000
19
1.
#26000
09
0.
#27000
19
1.
#28000
09
0.
#29000
19
1.
#30000
09
0.
1:
1/
#31000
b10110 $
b10110 ?
1E
1-
b10 (
b10 A
1*
1"
b1 ,
b1 C
b1011010101001 F
19
1.
#32000
09
0.
#33000
19
1.
#34000
09
0.
#35000
19
1.
#36000
09
0.
#37000
19
1.
#38000
09
0.
#39000
19
1.
#40000
09
0.
#41000
19
1.
#42000
09
0.
#43000
19
1.
#44000
09
0.
#45000
19
1.
1;
10
#46000
09
0.
#47000
19
1.
#48000
09
0.
#49000
19
1.
#50000
09
0.
#51000
19
1.
#52000
09
0.
#53000
19
1.
#54000
09
0.
#55000
19
1.
#56000
09
0.
#57000
19
1.
#58000
09
0.
#59000
19
1.
#60000
0E
0-
09
0.
b11 8
b11 +
b11 B
03
0!
15
1%
07
0)
b11 6
b11 '
b11 @
b10000 4
b1000011010011 D
b10000 #
b10000 >
0;
00
#61000
b10000 $
b10000 ?
1E
1-
b11 (
b11 A
0*
1&
0"
b11 ,
b11 C
b1000011010011 F
19
1.
#62000
09
0.
#63000
19
1.
#64000
09
0.
#65000
19
1.
#66000
09
0.
#67000
19
1.
#68000
09
0.
#69000
19
1.
#70000
09
0.
#71000
19
1.
#72000
09
0.
#73000
19
1.
#74000
09
0.
#75000
b10100 $
b10100 ?
b0 (
b0 A
1*
b0 ,
b0 C
b1010000110000 F
1E
1-
19
1.
b0 8
b0 +
b0 B
17
1)
b0 6
b0 '
b0 @
b10100 4
b1010000110000 D
b10100 #
b10100 >
#76000
09
0.
#77000
19
1.
#78000
09
0.
#79000
19
1.
#80000
09
0.
#81000
19
1.
#82000
09
0.
#83000
19
1.
#84000
09
0.
#85000
19
1.
#86000
09
0.
#87000
19
1.
#88000
09
0.
#89000
19
1.
#90000
09
0.
